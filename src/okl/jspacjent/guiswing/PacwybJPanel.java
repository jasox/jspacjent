/*
 * PacjentJPanel.java
 *
 * Created on 18 grudzieñ 2006, 14:33
 */
package okl.jspacjent.guiswing;

import java.util.*;
import javax.swing.*;
import java.text.*;

import okl.jspacjent.model.*;
import okl.jspacjent.dao.*;

/**  
 * Panel wyboru pacjenta 
 *
 * @author  janusz.swol@lot.pl
 */
public class PacwybJPanel extends javax.swing.JPanel {
  
  /** format wprowadzania PESEL'u */
  NumberFormat peselFormat = NumberFormat.getNumberInstance();  
  
  // Fields  
  
  /** data access object for this application */
  private DAO dao;
  
  /** lista elementów do wyboru */
  private List pacjenci;
  
  /** wybierany bean */
  private Pacjent pacjent; 
  
  /** model listy elementów do wyboru dla komponentu JList */
  private DefaultListModel listModel = new DefaultListModel();  
  

  // Access methods
  
  public void setDao( DAO dao ) {
    this.dao = dao;
  }
  
  public DAO getDao() {
    return dao;
  }
  
  public List getPacjenci() {
    return pacjenci;
  }
  
  public void setPacjenci( List pacjenci ) {
    this.pacjenci = pacjenci;
  }  
  
  public Pacjent getPacjent() {
    return this.pacjent;
  } 
  
  public void setPacjent( Pacjent pacjent ) {
    this.pacjent = pacjent;
  }
  
  // Other metods
  
  /** wybrany z listy element */
  public Pacjent getPacjentSelected() {
    return (Pacjent)editedList.getSelectedValue();         
  }
  
  /** ustawienie elementu wybranego z listy jako edytowanego */
  public void setPacjent() {    
    this.pacjent = getPacjentSelected();         
  }  
  
  /** odœwie¿enie zawartoœci elementów GUI */
  public void updateComponents() {
    // Komponenty zale¿ne od wybranego elementu listy
    if ( getPacjent() == null ) {       
      deleteButton.setEnabled( false );
      wybLabel.setText( null );
    }
    else {       
      wybLabel.setText( getPacjent().getNazwisko() + " " +
                        getPacjent().getImie() );
      deleteButton.setEnabled( true );      
    } 
    // Komponenty zale¿ne od wpisanych kryteriów wyszukiwania
    if ( nazwiskoField.getText().equals("") && 
         peselField.getText().equals("")  ) {
      searchButton.setEnabled( false );   
    }
    else {
      searchButton.setEnabled( true );       
    }
  }  
  
  /** ustawienie formatów wczytywania danych */
  public void initFormat() {
    peselFormat.setGroupingUsed(false);
    peselFormat.setParseIntegerOnly(true);
    peselFormat.setMaximumIntegerDigits(11);      
  }
  
  /** utworzenie modelu listy */
  public void setListModel() {
    listModel.removeAllElements();
    if ( getPacjenci() == null ) {
      Pacjent a = new Pacjent();
      setPacjenci( new LinkedList() );
      getPacjenci().add( a );
      listModel.addElement( a ); 
    }
    else {
      Iterator iter = getPacjenci().iterator();
      while ( iter.hasNext() ) {
        Pacjent a = (Pacjent)iter.next();
        listModel.addElement(a);        
      }      
    }
  }
  
  // Constructors  
  
  /** Creates new form PacjentJPanel */
  public PacwybJPanel() {
    initFormat();
    initComponents();    
    updateComponents();
  }
  
  /** Creates new form PacwybJPanel */
  public PacwybJPanel( List pacjenci ) {
    setPacjenci( pacjenci );
    initFormat();
    initComponents();    
    updateComponents();
  }
  
  /** Creates new form PacwybJPanel */
  public PacwybJPanel( DAO dao ) {
    setDao( dao );
    setPacjenci( dao.getAllPacjent() );
    initFormat();
    initComponents();    
    updateComponents();
  }
  
  /** Creates new form PacwybJPanel */
  public PacwybJPanel( List pacjenci, DAO dao ) {
    setDao( dao );
    if ( pacjenci == null ) {
      if ( getDao() != null ) {
        setPacjenci( getDao().getAllPacjent() );  
      }  
    }
    else {
      setPacjenci( pacjenci );
    }          
    initFormat();
    initComponents();    
    updateComponents();
  }
  
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
  private void initComponents() {
    setListModel();
    listPanel = new javax.swing.JPanel();
    jScrollPane = new javax.swing.JScrollPane();
    editedList = new javax.swing.JList( listModel );
    editPanel = new javax.swing.JPanel();
    peselField = new javax.swing.JFormattedTextField( peselFormat );
    nazwiskoField = new javax.swing.JTextField();
    buttonPanel = new javax.swing.JPanel();
    deleteButton = new javax.swing.JButton();
    addButton = new javax.swing.JButton();
    searchButton = new javax.swing.JButton();
    wybLabel = new javax.swing.JLabel();

    listPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Wyb\u00f3r danych osobowych pacjenta z listy", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), javax.swing.UIManager.getDefaults().getColor("Button.darkShadow")));
    editedList.setFont(new java.awt.Font("Tahoma", 0, 12));
    editedList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    editedList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
      public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
        editedListValueChanged(evt);
      }
    });

    jScrollPane.setViewportView(editedList);

    org.jdesktop.layout.GroupLayout listPanelLayout = new org.jdesktop.layout.GroupLayout(listPanel);
    listPanel.setLayout(listPanelLayout);
    listPanelLayout.setHorizontalGroup(
      listPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(listPanelLayout.createSequentialGroup()
        .addContainerGap()
        .add(jScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
        .addContainerGap())
    );
    listPanelLayout.setVerticalGroup(
      listPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(listPanelLayout.createSequentialGroup()
        .add(jScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
        .addContainerGap())
    );

    editPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Wyb\u00f3r wed\u0142ug danych", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), javax.swing.UIManager.getDefaults().getColor("Button.darkShadow")));
    peselField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PESEL", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), javax.swing.UIManager.getDefaults().getColor("Button.darkShadow")));
    peselField.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        peselFieldKeyReleased(evt);
      }
    });

    nazwiskoField.setFont(new java.awt.Font("Tahoma", 0, 12));
    nazwiskoField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nazwisko", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), javax.swing.UIManager.getDefaults().getColor("Button.darkShadow")));
    nazwiskoField.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        nazwiskoFieldKeyReleased(evt);
      }
    });

    org.jdesktop.layout.GroupLayout editPanelLayout = new org.jdesktop.layout.GroupLayout(editPanel);
    editPanel.setLayout(editPanelLayout);
    editPanelLayout.setHorizontalGroup(
      editPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(editPanelLayout.createSequentialGroup()
        .addContainerGap()
        .add(editPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
          .add(nazwiskoField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
          .add(peselField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 106, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );
    editPanelLayout.setVerticalGroup(
      editPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(org.jdesktop.layout.GroupLayout.TRAILING, editPanelLayout.createSequentialGroup()
        .addContainerGap()
        .add(peselField)
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(nazwiskoField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );

    buttonPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Operacje na elementach listy", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), javax.swing.UIManager.getDefaults().getColor("Button.darkShadow")));
    deleteButton.setFont(new java.awt.Font("Tahoma", 0, 12));
    deleteButton.setForeground(new java.awt.Color(153, 0, 0));
    deleteButton.setText("Usu\u0144 zaznaczone");
    deleteButton.setToolTipText("usuni\u0119cie elementu wybranego na li\u015bcie ");
    deleteButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        deleteButtonActionPerformed(evt);
      }
    });

    addButton.setFont(new java.awt.Font("Tahoma", 0, 12));
    addButton.setForeground(new java.awt.Color(0, 102, 51));
    addButton.setText("Dodaj nowe");
    addButton.setToolTipText("dodanie nowego elementu do listy ");
    addButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        addButtonActionPerformed(evt);
      }
    });

    searchButton.setFont(new java.awt.Font("Tahoma", 0, 12));
    searchButton.setText("Szukaj wed\u0142ug danych");
    searchButton.setToolTipText("szukanie danych osobowych wed\u0142ug wpisanych ni\u017cej kryteri\u00f3w");
    searchButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        searchButtonActionPerformed(evt);
      }
    });

    org.jdesktop.layout.GroupLayout buttonPanelLayout = new org.jdesktop.layout.GroupLayout(buttonPanel);
    buttonPanel.setLayout(buttonPanelLayout);
    buttonPanelLayout.setHorizontalGroup(
      buttonPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(buttonPanelLayout.createSequentialGroup()
        .addContainerGap()
        .add(buttonPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
          .add(deleteButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
          .add(addButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
          .add(searchButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE))
        .addContainerGap())
    );
    buttonPanelLayout.setVerticalGroup(
      buttonPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(buttonPanelLayout.createSequentialGroup()
        .addContainerGap()
        .add(deleteButton)
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(addButton)
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(searchButton)
        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    wybLabel.setFont(new java.awt.Font("Tahoma", 0, 12));
    wybLabel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Wybrane dane osobowe  pacjenta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), javax.swing.UIManager.getDefaults().getColor("Button.darkShadow")));

    org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(layout.createSequentialGroup()
        .addContainerGap()
        .add(listPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
          .add(editPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .add(buttonPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .add(wybLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 231, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(layout.createSequentialGroup()
        .addContainerGap()
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
          .add(listPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .add(layout.createSequentialGroup()
            .add(buttonPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(editPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(wybLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap())
    );
  }// </editor-fold>//GEN-END:initComponents

  private void nazwiskoFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nazwiskoFieldKeyReleased
    peselField.setText( "" );    
    updateComponents();
  }//GEN-LAST:event_nazwiskoFieldKeyReleased

  private void peselFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_peselFieldKeyReleased
    nazwiskoField.setText( null );
    updateComponents();
  }//GEN-LAST:event_peselFieldKeyReleased

  private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
    // Poszukiwania wed³ug nazwiska
    if ( !nazwiskoField.getText().equals("") ) {
      String nazwisko = nazwiskoField.getText().trim() + "%";
      if ( getDao() != null ) {
        setPacjenci( getDao().getPacjentByNazwisko( nazwisko ) );  
        setListModel();
      }  
    }    
    // Poszukiwania wed³ug PESELU
    Long pesel = null;
    if ( !peselField.getText().equals("")  ) {       
      try {
        peselField.commitEdit();
        if ( peselField.getValue() != null ) {
          pesel = ( (Number)peselField.getValue() ).longValue();
        }  
      }
      catch ( java.text.ParseException e) {
        peselField.setText( null );        
        e.printStackTrace();  
      } 
      if ( ( pesel != null ) && ( pesel != 0L ) ) {
        if ( getDao() != null ) {
          setPacjenci( getDao().getPacjentByPesel( pesel ) );  
          setListModel();         
        }  
      }
      else {
        wybLabel.setText( "B³êdny pesel" );
      }
    }   
  }//GEN-LAST:event_searchButtonActionPerformed

  private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
    setPacjent( new Pacjent(0, "") );      
    if ( ( getPacjent() != null ) && ( getDao() != null ) ){
      getDao().updatePacjent( getPacjent() );
    }
    if ( getPacjenci() != null ) {
      getPacjenci().add( getPacjent() );
    }
    listModel.addElement( getPacjent() );    
    updateComponents();
    editedList.setSelectedValue( getPacjent(), true );     
  }//GEN-LAST:event_addButtonActionPerformed

  private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
    if ( ( getPacjent() != null ) && ( getDao() != null ) ) {      
      //getDao().updatePacjent( getPacjent() );
      getDao().deletePacjent( getPacjent() );      
    }
    if ( ( getPacjenci() != null ) && ( getPacjent() != null ) ) {
      getPacjenci().remove( getPacjent() );
    }  
    if (  getPacjentSelected() != null ) {
      listModel.removeElement( getPacjentSelected() );
    }              
    editedList.updateUI();        
  }//GEN-LAST:event_deleteButtonActionPerformed

  private void editedListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_editedListValueChanged
    // TODO add your handling code here:
    setPacjent();  
    updateComponents();
  }//GEN-LAST:event_editedListValueChanged
  
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton addButton;
  private javax.swing.JPanel buttonPanel;
  private javax.swing.JButton deleteButton;
  private javax.swing.JPanel editPanel;
  private javax.swing.JList editedList;
  private javax.swing.JScrollPane jScrollPane;
  private javax.swing.JPanel listPanel;
  private javax.swing.JTextField nazwiskoField;
  private javax.swing.JFormattedTextField peselField;
  private javax.swing.JButton searchButton;
  private javax.swing.JLabel wybLabel;
  // End of variables declaration//GEN-END:variables

}
