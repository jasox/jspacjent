-- -------------------------------------------------------------------
--     Nazwa pliku: ddt_jspacjent.sql
--       Utworzony: 04.12.2006
--           Autor: Janusz Swó³ ©2006
--           Firma: PLL 'LOT' SA
--       Dzia³anie: utworzenie tabel systemu JSPacjent, baza HSQLDB
--        Podstawa:
-- Etap realizacji: Test
--           Uwagi:
-- -------------------------------------------------------------------
--
DROP TABLE IF EXISTS badanie;
DROP TABLE IF EXISTS leczenie;
DROP TABLE IF EXISTS przyjecie;
DROP TABLE IF EXISTS rodzbad;
DROP TABLE IF EXISTS rodzlecz;
DROP TABLE IF EXISTS rozpoznanie;
DROP TABLE IF EXISTS lekarz;
DROP TABLE IF EXISTS skierow;
DROP TABLE IF EXISTS pacjent;
DROP TABLE IF EXISTS kasaCh;
--
-- -------------------------------------------------------------------
-- Struktura tabeli dla KAS CHORYCH pacjenta
--  informacje o kasach chorych
-- -------------------------------------------------------------------
--
CREATE TABLE kasaCh (    
  --
  id_kasa BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) 
                      NOT NULL,  -- identyfikator kasy chorych   
  opis    VARCHAR(35) NOT NULL,  -- opis kasy chorych 
  --
  uwagi   VARCHAR(20),
  --
  CONSTRAINT kasaCh_pk PRIMARY KEY(id_kasa)  
);
--
--
-- -------------------------------------------------------------------
-- Struktura tabeli dla  PACJENTÓW
--  ogólne informacje o pacjencie
-- -------------------------------------------------------------------
--
CREATE TABLE pacjent ( 
  --
  id_pacj  BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) 
                       NOT NULL, -- identyfikator pacjenta
  pesel    DECIMAL(11),          -- pesel pacjenta
  imie     VARCHAR(15),          -- imiê pacjenta
  nazwisko VARCHAR(25) NOT NULL, -- nazwisko pacjenta
  wiek     FLOAT,                -- wiek pacjenta
  adres    VARCHAR(55),          -- adres zamieszkania pacjenta 
  kontakt  VARCHAR(35),          -- osoba kontaktowa
  telKont  VARCHAR(15),          -- telefon kontaktowy     
  id_kasa  BIGINT,               -- identyfikator kasy chorych  
  --  
  uwagi   VARCHAR(20),
  --
  CONSTRAINT pacjent_pk PRIMARY KEY(id_pacj),
  CONSTRAINT pacjent_kasaCh_fk FOREIGN KEY( id_kasa )
                               REFERENCES kasaCh( id_kasa ) 
);
--
--
-- -------------------------------------------------------------------
-- Struktura tabeli dla MIEJSC SK¥D SKIEROWANO pacjenta
--  informacje 
-- -------------------------------------------------------------------
--
CREATE TABLE skierow (    
  --
  id_skier BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) 
                       NOT NULL, -- id miejsca skierowania 
  opis     VARCHAR(35) NOT NULL, -- opis miejsca skierowania 
  --
  uwagi    VARCHAR(20),
  --
  CONSTRAINT skierow_pk PRIMARY KEY(id_skier)   
);
--
--
-- -------------------------------------------------------------------
-- Struktura tabeli dla LEKARZY na oddziale
--  informacje o lekarzach
-- -------------------------------------------------------------------
--
CREATE TABLE lekarz (  
  --
  id_lekarz BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) 
                         NOT NULL, -- identyfikator lekarza  
  imie      VARCHAR(15),           -- imiê lekarza 
  nazwisko  VARCHAR(25)  NOT NULL, -- nazwisko lekarza   
  --
  uwagi     VARCHAR(20),
  --
  CONSTRAINT lekarz_pk PRIMARY KEY(id_lekarz)  
);
--
--
-- -------------------------------------------------------------------
-- Struktura tabeli dla ROZPOZNANIA CHOROBY na oddziale
--  informacje o rozpoznaniu
-- -------------------------------------------------------------------
--
CREATE TABLE rozpoznanie (    
  --
  id_rozp  BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) 
                        NOT NULL,  -- id rozpoznania 
  opis     VARCHAR(55),            -- opis rozpoznania 
  --
  uwagi    VARCHAR(20),
  --
  CONSTRAINT rozpoznanie_pk PRIMARY KEY(id_rozp)   
);
--
-- -------------------------------------------------------------------
-- Struktura tabeli dla RODZAJÓW LECZENIA na oddziale
--  informacje o rodzajach leczenia
-- -------------------------------------------------------------------
--
CREATE TABLE rodzlecz (    
  --
  id_rodzl BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) 
                        NOT NULL,  -- rodzaj leczenia 
  opis     VARCHAR(35),            -- opis leczenia 
  --
  uwagi    VARCHAR(20),
  --
  CONSTRAINT rodzlecz_pk PRIMARY KEY(id_rodzl)   
);
--
--
-- -------------------------------------------------------------------
-- Struktura tabeli dla RODZAJÓW LECZENIA na oddziale
--  informacje o rodzajach leczenia
-- -------------------------------------------------------------------
--
CREATE TABLE rodzbad (    
  --
  id_rodzb BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) 
                        NOT NULL,  -- rodzaj badania 
  opis     VARCHAR(35),            -- opis badania 
  --
  uwagi    VARCHAR(20),
  --
  CONSTRAINT rodzbad_pk PRIMARY KEY(id_rodzb)   
);
--
--
-- -------------------------------------------------------------------
-- Struktura tabeli dla  PRZYJÊÆ na oddzia³
--  informacje o przyjêciu
-- -------------------------------------------------------------------
--
CREATE TABLE przyjecie (
  --
  id_przyj  BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1)
                       NOT NULL, -- identyfikator przyjêcia  
  nrGlowny  BIGINT     NOT NULL, -- numer g³ówny ksiêgi szpitala
  nrOddzial BIGINT     NOT NULL, -- numer odzia³owy
  ksg       VARCHAR(4),          -- sygnatura ksiêgi      
  id_pacj   BIGINT     NOT NULL, -- identyfikator pacjenta
  --
  data_prz  TIMESTAMP,           -- data i czas przyjêcia do szpitala
  sskierow  VARCHAR(35),         -- sk¹d skierowany
  sk_uwagi  VARCHAR(25),         -- uwagi o skierowaniu
  id_lekarz BIGINT,              -- identyfikator lekarza prowadz¹cego
  rozpWst   VARCHAR(45),         -- rozpoznanie wstêpne
  rozpOst   VARCHAR(45),         -- rozpoznanie ostateczne   
  data_wyp  TIMESTAMP,           -- data i czas wypisania ze szpitala
  gdzieWyp  VARCHAR(35),         -- gdzie wypisany  
  --
  uwagi   VARCHAR(20),
  --
  CONSTRAINT przyjecie_pk PRIMARY KEY(id_przyj),
  -- Ka¿dego roku numery zaczynaj¹ siê od nowa, nie s¹ unikalne  
  -- CONSTRAINT przyjecie_nrGlowny_uq  UNIQUE(nrGlowny),
  -- CONSTRAINT przyjecie_nrOddzial_uq UNIQUE(nrOddzial),
  CONSTRAINT przyjecie_pacjent_fk FOREIGN KEY( id_pacj )
                                  REFERENCES pacjent( id_pacj ),
  CONSTRAINT przyjecie_lekarz_fk  FOREIGN KEY( id_lekarz )
                                  REFERENCES lekarz( id_lekarz ) 
);
--
--
-- -------------------------------------------------------------------
-- Struktura tabeli dla LECZENIA na oddziale
--  informacje o leczeniu
-- -------------------------------------------------------------------
--
CREATE TABLE leczenie (  
  --
  id_lecz  BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) 
                  NOT NULL,  -- identyfikator leczenia  
  id_przyj BIGINT NOT NULL,  -- identyfikator przyjêcia
  data     DATE,             -- data leczenia
  id_rodzl BIGINT,           -- rodzaj leczenia 
  opis     VARCHAR(75),      -- opis leczenia 
  --
  uwagi    VARCHAR(20),
  --
  CONSTRAINT leczenie_pk PRIMARY KEY(id_lecz),
  CONSTRAINT leczenie_przyjecie_fk FOREIGN KEY( id_przyj )
                                   REFERENCES przyjecie( id_przyj )
                                   ON DELETE CASCADE,
  CONSTRAINT leczenie_rodzlecz_fk  FOREIGN KEY( id_rodzl )
                                   REFERENCES rodzlecz( id_rodzl )
);
--
--
-- -------------------------------------------------------------------
-- Struktura tabeli dla BADAÑ na oddziale
--  informacje o badaniach
-- -------------------------------------------------------------------
--
CREATE TABLE badanie (  
  --
  id_badan BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) 
                  NOT NULL,  -- identyfikator badania
  id_przyj BIGINT NOT NULL,  -- identyfikator przyjêcia  
  data     DATE,             -- data badania
  id_rodzb BIGINT,           -- rodzaj badania 
  opis     VARCHAR(75),      -- opis badania 
  --
  uwagi    VARCHAR(20),
  --
  CONSTRAINT badanie_pk PRIMARY KEY(id_badan),
  CONSTRAINT badanie_przyjecie_fk FOREIGN KEY( id_przyj )
                                  REFERENCES przyjecie( id_przyj )
                                  ON DELETE CASCADE,
  CONSTRAINT badanie_rodzbad_fk   FOREIGN KEY( id_rodzb )
                                  REFERENCES rodzbad( id_rodzb )
);
--
--
-- -------------------------------------------------------------------
COMMIT;
